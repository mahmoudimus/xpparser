# Vertical DataXPath fragment of XQueryX in Relax NG compact syntax
#
# Based on Diego Figueira and Luc Segoufin, _Bottom-up automata on
# data trees and vertical XPath_, in the Proceedings of the 28th Annual
# Symposium on Theoretical Aspects of Computer Science (STACS'11),
# volume 9 of LIPIcs, pages 93--109, LZI, 2011.
# doi:10.4230/LIPIcs.STACS.2011.93
#
# Copyright (C) 2016-2017
#   David Baelde, Anthony Lick and Sylvain Schmitz (ENS Cachan)
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

default namespace = "http://www.w3.org/2005/XQueryX"

include "xpath-1.0-data.rnc" {
  axis = element xpathAxis {
    ( string "child"
    | string "attribute"
    | string "self"
    | string "parent"
    | string "descendant-or-self"
    | string "descendant"
    | string "ancestor"
    | string "ancestor-or-self"
    | string "namespace" # obtainable using the ancestor axis
    )
  }
  
  last.axis = element xpathAxis {
    ( string "self"                 # Always
    | string "attribute"
    | string "parent"               # Always 
    )
  }

  # Same as in expr/last.rnc but disallowing varref
  last.primary = literal
    |  element contextItemExpr { empty }
    |  fun
    |  element sequenceExpr { last.path* }

  # everything except numerical literals, operations, and functions
  predicates = element predicates {
    ( varref
    | str
    | element contextItemExpr { empty }
    | fun # needs to be refined!
    | element sequenceExpr { expr* }
    | op  # needs to be refined!
    | path
    | if.expr )*
  }
}
