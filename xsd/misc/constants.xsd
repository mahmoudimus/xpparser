<?xml version="1.0"?>
<!--
XPath constant expressions: literals, variable references, and the
context item ".".

This software or document includes material copied from or derived 
from the XQueryX 3.0 W3C Recommendation of 08 April 2014
(https://www.w3.org/TR/2014/REC-xqueryx-30-20140408/).
Copyright © 2014 W3C® (MIT, ERCIM, Keio, Beihang).
-->
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema"
            xmlns="http://www.w3.org/2005/XQueryX"
            targetNamespace="http://www.w3.org/2005/XQueryX"
            elementFormDefault="qualified"
            attributeFormDefault="qualified">

  <!-- Literals:
  [56] PrimaryExpr     ::=  Literal
  [57] Literal 	       ::=  NumericLiteral | StringLiteral 	
  [58] NumericLiteral  ::=  IntegerLiteral | DecimalLiteral | DoubleLiteral 
  -->
  <xsd:complexType name="constantExpr">
    <xsd:complexContent>
      <xsd:extension base="expr">
        <xsd:sequence>
          <xsd:element name="value" type="xsd:anyType"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:element name="constantExpr" type="constantExpr" abstract="true"
               substitutionGroup="expr"/>

  <xsd:complexType name="integerConstantExpr">
    <xsd:complexContent>
      <xsd:restriction base="constantExpr">
        <xsd:sequence>
          <xsd:element name="value" type="xsd:integer"/>
        </xsd:sequence>
      </xsd:restriction>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:element name="integerConstantExpr" type="integerConstantExpr"
               substitutionGroup="constantExpr"/>


  <xsd:complexType name="decimalConstantExpr">
    <xsd:complexContent>
      <xsd:restriction base="constantExpr">
        <xsd:sequence>
          <xsd:element name="value" type="xsd:decimal"/>
        </xsd:sequence>
      </xsd:restriction>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:element name="decimalConstantExpr" type="decimalConstantExpr"
               substitutionGroup="constantExpr"/>

  <xsd:complexType name="doubleConstantExpr">
    <xsd:complexContent>
      <xsd:restriction base="constantExpr">
        <xsd:sequence>
          <xsd:element name="value" type="xsd:double"/>
        </xsd:sequence>
      </xsd:restriction>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:element name="doubleConstantExpr" type="doubleConstantExpr"
               substitutionGroup="constantExpr"/>

  <xsd:complexType name="stringConstantExpr">
    <xsd:complexContent>
      <xsd:restriction base="constantExpr">
        <xsd:sequence>
          <xsd:element name="value" type="xsd:string"/>
        </xsd:sequence>
      </xsd:restriction>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:element name="stringConstantExpr" type="stringConstantExpr"
               substitutionGroup="constantExpr"/>

  <!-- Variables:
  [56] PrimaryExpr ::=  VarRef
  [59] VarRef 	   ::=  "$" VarName
  [60] VarName     ::=  EQName
  -->
  <xsd:complexType name="varRef">
    <xsd:complexContent>
      <xsd:extension base="expr">
        <xsd:sequence>
          <xsd:element name="name" type="EQName"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:element name="varRef" type="varRef" substitutionGroup="expr"/>
  
  <!-- root and context-item expressions                                     -->
  <!-- rootExpr deleted per Bugzilla Bug #2523                               -->
  <!-- Context item:
  [56] PrimaryExpr      ::=  ContextItemExpr
  [62] ContextItemExpr  ::=  "."
  -->
  <xsd:complexType name="contextItemExpr">
    <xsd:complexContent>
      <xsd:extension base="expr"/>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:element name="contextItemExpr" type="contextItemExpr"
               substitutionGroup="expr"/>
</xsd:schema>
