<?xml version="1.0"?>
<project name="xpath-benchmark" default="all" basedir="."
         xmlns:unless="ant:unless">

  <description>Extract data from benchmark results.</description>
  
  <property name="xml" value="xpathmark-full"/>
  <property name="target.dir" value="$./public_html/chord/"/>
  <property name="project.root" value="../.."/>
  <property name="bench.dir" value="${project.root}/benchmark"/>
  <property name="lib.dir" value="${project.root}/lib"/>

  <target name="all" depends="install"/>

  <!-- main target -->
  <target name="install" depends="minify,matrix"/>

  <!-- xpath ant task -->
  <available
      file="${project.root}/target/classes/org/wiztools/ant/xpath/XPathTask.class"
      property="xtask.offline"/>
  <target name="xtask">
    <get unless:set="xtask.offline"
         src="https://github.com/wiztools/ant-xpath-task/archive/master.zip"
         dest="${lib.dir}/xtask.zip" usetimestamp="true"/>
    <unzip unless:set="xtask.offline" src="${lib.dir}/xtask.zip"
           dest="${lib.dir}" overwrite="no"/>
    <javac srcdir="${lib.dir}/ant-xpath-task-master/src/main/java/"
           destdir="${project.root}/target/classes/" includeantruntime="true"/>
  </target>
  <taskdef name="xpath" classname="org.wiztools.ant.xpath.XPathTask"
           classpath="${project.root}/target/classes"/>
  
  <!-- extract benchmark data -->
  <uptodate property="extracted">
    <srcfiles dir="${project.root}/xslt/" includes="matrix.xsl"/>
    <srcfiles dir="./" includes="index.html"/>
    <srcfiles dir="${bench.dir}" includes="${xml}.xml"/>
    <mergemapper to="${target.dir}/${xml}/matrix.json"/>
  </uptodate>
  <target name="matrix" depends="saxon,xtask" unless="extracted">
    <mkdir dir="${target.dir}/${xml}"/>
    <xslt style="${project.root}/xslt/matrix.xsl"
          in="${bench.dir}/${xml}.xml"
          out="matrix.json">
      <classpath>
        <pathelement path="${lib.dir}/saxon9he.jar"/>
      </classpath>
    </xslt>
    <!-- get the number of fragments -->
    <xpath document="${project.root}/relaxng/fragments-full.xml"
           xpath="count(//schema)"
           outputproperty="fragments"/>
    <!-- get the number of entries -->
    <xpath document="${bench.dir}/${xml}.xml"
           xpath="count(//xpath/ast)" 
           outputproperty="entries"/><!-- //xpath[ast/descendant::*[local-name() = 'xpathAxis']])" -->
    <!-- process index.html -->
    <copy file="index.html" todir="${target.dir}/${xml}">
      <filterchain>
        <replacetokens>
          <token key="FRAGMENTS" value="${fragments}"/>
          <token key="BENCHMARK" value="${xml}"/>
          <token key="ENTRIES" value="${entries}"/>
        </replacetokens>
      </filterchain>
    </copy>
    <!-- copy benchmark information -->
    <move file="matrix.json" todir="${target.dir}/${xml}"/>
    <move file="fragments.csv" todir="${target.dir}/${xml}"/>
    <bzip2 src="${bench.dir}/${xml}.xml"
           destfile="${target.dir}/${xml}/${xml}.xml.bz2"/>
    <copy file="${bench.dir}/${xml}.LICENSE"
          todir="${target.dir}/${xml}"/>
  </target>

  <!-- minify CSS and javascript files -->
  <fileset dir="." id="css.files"><include name="*.css"/></fileset>
  <fileset dir="." id="js.files"><include name="*.js"/></fileset>
  <pathconvert pathsep=" " property="css" refid="css.files"/>
  <pathconvert pathsep=" " property="js" refid="js.files"/>
  <uptodate property="minified">
    <srcresources>
      <resources refid="css.files"/>
      <resources refid="js.files"/>
    </srcresources>
    <regexpmapper from="^(.*)\.(css|js)$$" to="${target.dir}/\1.min.\2"/>
  </uptodate>
  <target name="minify" depends="yui" unless="minified">
    <java jar="${lib.dir}/yuicompressor-2.4.8.jar" fork="true">
      <arg line="--type js -o '.js$:.min.js' ${js}"/>
      <classpath>
        <pathelement location="${lib.dir}/yuicompressor-2.4.8.jar"/>
      </classpath>
    </java>
    <java jar="${lib.dir}/yuicompressor-2.4.8.jar" fork="true">
      <arg line="--type css -o '.css$:.min.css' ${css}"/>
      <classpath>
        <pathelement location="${lib.dir}/yuicompressor-2.4.8.jar"/>
      </classpath>
    </java>
    <move todir="${target.dir}">
      <fileset dir="."><include name="*.min.*"/></fileset>
    </move>
  </target>

  <!-- download saxon if needed -->
  <target name="saxon">
    <local name="offline"/>
    <available file="${lib.dir}/saxon9he.jar" property="offline"/>
    <mkdir unless:set="offline" dir="${lib.dir}"/>
    <get unless:set="offline"
         src="https://downloads.sourceforge.net/project/saxon/Saxon-HE/9.7/SaxonHE9-7-0-14J.zip?r=https%3A%2F%2Fsourceforge.net%2Fprojects%2Fsaxon%2Ffiles%2FSaxon-HE%2F9.7%2F&amp;ts=1485885576&amp;use_mirror=vorboss"
         dest="${lib.dir}" usetimestamp="true"/>
    <unzip unless:set="offline" src="${lib.dir}/SaxonHE9-7-0-14J.zip" dest="${lib.dir}"
           overwrite="no"/>
  </target>

  <!-- download YUI if needed -->
  <target name="yui">
    <local name="offline"/>
    <available file="${lib.dir}/yuicompressor-2.4.8.jar" property="offline"/>
    <get unless:set="offline"
         src="https://github.com/yui/yuicompressor/releases/download/v2.4.8/yuicompressor-2.4.8.jar"
         dest="${lib.dir}" usetimestamp="true"/>
  </target>
</project>
