<?xml version="1.0"?>
<project name="xpath-benchmark" default="all" basedir="."
         xmlns:unless="ant:unless">

  <description>Extract data from benchmark results.</description>
  
  <property name="xml" value="xpathmark"/>
  <property name="target.dir" value="${user.home}/public_html/chord/"/>
  <property name="project.root" value="../.."/>
  <property name="bench.dir" value="${project.root}/benchmark"/>
  <property name="lib.dir" value="${project.root}/lib"/>

  <target name="all" depends="install"/>

  <!-- main target -->
  <target name="install" depends="minify,matrix">
    <copy file="prettify.min.css" todir="${target.dir}"/>
    <copy file="lang-xpath.min.js" todir="${target.dir}"/>
    <copy file="xpp.min.css" todir="${target.dir}"/>
    <copy file="render.min.js" todir="${target.dir}"/>
  </target>
  
  <!-- extract benchmark data -->
  <uptodate property="extracted">
    <srcfiles dir="./" includes="matrix.xsl"/>
    <srcfiles dir="${bench.dir}" includes="${xml}.xml"/>
    <mergemapper to="${target.dir}/${xml}/matrix.json"/>
  </uptodate>
  <target name="matrix" depends="saxon" unless="extracted">
    <mkdir dir="${target.dir}/${xml}"/>
    <xslt style="matrix.xsl"
          in="${bench.dir}/${xml}.xml"
          out="matrix.json">
      <classpath>
        <pathelement path="${lib.dir}/saxon9he.jar"/>
      </classpath>
    </xslt>
    <!-- get the number of fragments -->
    <resourcecount property="fragments">
      <tokens>
        <concat>
          <filterchain>
            <tokenfilter>
              <linetokenizer/>
            </tokenfilter>
          </filterchain>
          <fileset file="fragments.csv"/>
        </concat>
      </tokens>
    </resourcecount>
    <!-- get the number of entries -->
    <resourcecount property="entries">
      <tokens>
        <concat>
          <filterchain>
            <tokenfilter>
              <containsstring contains="&lt;query&gt;"/>
            </tokenfilter>
          </filterchain>
          <fileset file="${bench.dir}/${xml}.xml"/>
        </concat>
      </tokens>
    </resourcecount>
    <copy file="index.html" todir="${target.dir}/${xml}">
      <filterchain>
        <replacetokens>
          <token key="FRAGMENTS" value="${fragments}"/>
          <token key="BENCHMARK" value="${xml}"/>
          <token key="ENTRIES" value="${entries}"/>
        </replacetokens>
      </filterchain>
    </copy>
    <move file="matrix.json" todir="${target.dir}/${xml}"/>
    <move file="fragments.csv" todir="${target.dir}/${xml}"/>
    <bzip2 src="${bench.dir}/${xml}.xml" destfile="${target.dir}/${xml}/${xml}.xml.bz2"/>
    <copy file="${bench.dir}/${xml}.LICENSE" todir="${target.dir}/${xml}"/>
  </target>

  <!-- minify CSS and javascript files -->
  <uptodate property="minified">
    <srcfiles dir="." includes="xpp.css prettify.css lang-xpath.js render.js"/>
    <regexpmapper from="^(.*)\.(css|js)$$" to="\1.min.\2"/>
  </uptodate>
  <target name="minify" depends="yui" unless="minified">
    <java jar="${lib.dir}/yuicompressor-2.4.8.jar" fork="true">
      <arg line="--type js -o '.js$:.min.js' lang-xpath.js render.js"/>
      <classpath>
        <pathelement location="${lib.dir}/yuicompressor-2.4.8.jar"/>
      </classpath>
    </java>
    <java jar="${lib.dir}/yuicompressor-2.4.8.jar" fork="true">
      <arg line="--type css -o '.css$:.min.css' xpp.css prettify.css"/>
      <classpath>
        <pathelement location="${lib.dir}/yuicompressor-2.4.8.jar"/>
      </classpath>
    </java>
  </target>

  <!-- download saxon if needed -->
  <target name="saxon">
    <local name="offline"/>
    <available file="${lib.dir}/saxon9he.jar" property="offline"/>
    <mkdir unless:set="offline" dir="${lib.dir}"/>
    <get unless:set="offline"
         src="https://downloads.sourceforge.net/project/saxon/Saxon-HE/9.7/SaxonHE9-7-0-14J.zip?r=https%3A%2F%2Fsourceforge.net%2Fprojects%2Fsaxon%2Ffiles%2FSaxon-HE%2F9.7%2F&amp;ts=1485885576&amp;use_mirror=vorboss"
         dest="${lib.dir}" usetimestamp="true"/>
    <unzip unless:set="offline" src="${lib.dir}/SaxonHE9-7-0-14J.zip" dest="${lib.dir}"
           overwrite="no"/>
  </target>

  <!-- download YUI if needed -->
  <target name="yui">
    <local name="offline"/>
    <available file="${lib.dir}/yuicompressor-2.4.8.jar" property="offline"/>
    <get unless:set="offline"
         src="https://github.com/yui/yuicompressor/releases/download/v2.4.8/yuicompressor-2.4.8.jar"
         dest="${lib.dir}" usetimestamp="true"/>
  </target>
</project>